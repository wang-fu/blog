# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

env: 
  REPO: http://github.com/wangfu/wang-fu.github.iocc.git
  GH_TOKEN: ${{secrets.test}}
  
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master



      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!


      - name: install dep
        run: npm i

      - name: build
        run: npm run dist


      - name: push
        run: |
          # 设置 git 信息
          git config --global user.email "imwangfu@foxmail.com"
          git config --global user.name "fly"
          remote_addr=`git remote get-url --push origin`
          echo "remote addr: ${remote_addr}"
          SSHPATH="$HOME/.ssh"
          rm -rf "$SSHPATH"
          mkdir -p "$SSHPATH"
          # 把 ssh 私钥写入系统
          echo "${{ secrets.PRIVATE_FLY_MAC }}" > "$SSHPATH/id_rsa"
          chmod 600 "$SSHPATH/id_rsa"
          sudo sh -c "echo StrictHostKeyChecking no >>/etc/ssh/ssh_config"
          domain=`echo $remote_addr|  awk -F'/' '{print $3}'`
          user_org=`echo $remote_addr|  awk -F'/' '{print $4}'`
          repo=`echo $remote_addr|  awk -F'/' '{print $5}'`
          remote_addr=git@${domain}:${user_org}/${repo}.git
          ## 更新 master 的 readme
          git add README.md
          git commit -m 'update readme' --allow-empty 
          git push origin HEAD:master --force
          # 把静态文件单独提交到 gh-page 分支
          cd docs/.vuepress/dist 
          git init
          git add -A
          git commit -m 'deploy' --allow-empty 
          git remote -v
          git remote add origin ${remote_addr}
          git push origin HEAD:gh-pages --force



      # - name: test
      #   run: |
      #     pwd
      #     ls
      #     echo git branch
      #     cd docs/test
      #     ls -al
      #     git config --global user.email "imwangfu@gmail.com"
      #     git config --global user.name "imwangfu"
      #     git config --global user.password "${{secrets.test}}"
      #     git init
      #     echo 333
      #     ls
      #     echo 3311
      #     git add -A
      #     git commit -m 'deploy' --allow-empty 
      #     git remote add origin https://github.com/wang-fu/wang-fu.github.iocc.git
      #     git remote -v
      #     echo ${{secrets.test}}
    
      #     # git push github master
      #     git push --force https://${{secrets.test}}@github.com/wang-fu/wang-fu.github.iocc.git test2


      # - name: push
        
      #   run: |
      #     cd docs/test
      #     git branch -v
      #     ls
      #     git push https://{{secrets.test}}@github.com/wang-fu/wang-fu.github.iocc.git gh-pages --force

      # Runs a set of commands using the runners shell
      - name: done
        run: |
          echo push succeed,
          echo test, and deploy your project.
