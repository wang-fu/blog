(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{488:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"开发分支模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发分支模式"}},[t._v("#")]),t._v(" 开发分支模式")]),t._v(" "),a("p",[t._v("上面的点都是围绕需求管理、项目管理等角度的一些总结。具体到代码提交层面，也是有很多细节差异。")]),t._v(" "),a("p",[t._v("比如在项目发布制度模式下，代码修改和提交完全可以统一在一个分支，传统 svn 大部分是这样做的，反正大家都是一起开发，一起测试，一起发布，这样能够将冲突做到最小。")]),t._v(" "),a("p",[t._v("但发布火车的版本制，则支持并行开发，意味着不同版本的功能需要切换都不同的版本分支，分支合并可能出现冲突。")]),t._v(" "),a("p",[t._v("而固定快车模式，以需求交付为单位，拆分力度更细，分支模式也会不一样。我们看下业界主要的几种方式。")]),t._v(" "),a("h3",{attrs:{id:"git工作流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git工作流"}},[t._v("#")]),t._v(" git工作流")]),t._v(" "),a("p",[t._v("git 工作流，叫 gitfolw。是大部分企业所采用的一种模式。很多人")]),t._v(" "),a("h3",{attrs:{id:"github-工作流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-工作流"}},[t._v("#")]),t._v(" github 工作流")]),t._v(" "),a("h3",{attrs:{id:"xxx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xxx"}},[t._v("#")]),t._v(" xxx")]),t._v(" "),a("h3",{attrs:{id:"发布计划怎么发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布计划怎么发"}},[t._v("#")]),t._v(" 发布计划怎么发（")])])}),[],!1,null,null,null);a.default=e.exports}}]);